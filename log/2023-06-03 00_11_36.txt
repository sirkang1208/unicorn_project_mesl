0x8000:	mov	ip, sp
0x8004:	push	{r3, r4, r5, r6, r7, r8, sb, sl, fp, ip, lr, pc}
0x8008:	sub	fp, ip, #4
0x800c:	sub	sp, fp, #0x28
0x8010:	ldm	sp, {r4, r5, r6, r7, r8, sb, sl, fp, sp, lr}
0x8014:	bx	lr
0x8018:	push	{r4, lr}
0x801c:	mov	r1, #0
0x8020:	mov	r4, r0
0x8024:	bl	#0xd8cc
0x8028:	ldr	r3, [pc, #0x18]
0x802c:	ldr	r0, [r3]
0x8030:	ldr	r3, [r0, #0x3c]
0x8034:	cmp	r3, #0
0x8038:	movne	lr, pc
0x803c:	bxne	r3
0x8040:	mov	r0, r4
0x8044:	bl	#0x14838
0x8048:	andeq	r4, r1, ip, ror sb
0x804c:	ldr	r3, [pc, #0x18]
0x8050:	cmp	r3, #0
0x8054:	bxeq	lr
0x8058:	push	{r4, lr}
0x805c:	ldr	r0, [pc, #0xc]
0x8060:	bl	#0xda04
0x8064:	pop	{r4, lr}
0x8068:	bx	lr
0x806c:	andeq	r0, r0, r0
0x8070:	andeq	pc, r0, r0, ror #6
0x8074:	push	{r4, lr}
0x8078:	ldr	r4, [pc, #0x28]
0x807c:	ldrb	r3, [r4]
0x8080:	cmp	r3, #0
0x8084:	bne	#0x80a0
0x8088:	ldr	r3, [pc, #0x1c]
0x808c:	cmp	r3, #0
0x8090:	ldrne	r0, [pc, #0x18]
0x8094:	movne	r0, r0
0x8098:	mov	r3, #1
0x809c:	strb	r3, [r4]
0x80a0:	pop	{r4, lr}
0x80a4:	bx	lr
0x80a8:	andeq	r5, r2, r0, lsl r8
0x80ac:	andeq	r0, r0, r0
0x80b0:	andeq	r4, r1, r8, lsr #27
0x80b4:	ldr	r3, [pc, #0x1c]
0x80b8:	cmp	r3, #0
0x80bc:	bxeq	lr
0x80c0:	push	{r4, lr}
0x80c4:	ldr	r1, [pc, #0x10]
0x80c8:	ldr	r0, [pc, #0x10]
0x80cc:	mov	r0, r0
0x80d0:	pop	{r4, lr}
0x80d4:	bx	lr
0x80d8:	andeq	r0, r0, r0
0x80dc:	andeq	r5, r2, r4, lsl r8
0x80e0:	andeq	r4, r1, r8, lsr #27
0x80e4:	mrs	r4, apsr
0x80e8:	tst	r4, #0xf
0x80ec:	beq	#0x8164
0x80f0:	mov	r3, sp
0x80f4:	mov	r1, #0xd1
0x80f8:	msr	cpsr_c, r1
0x80fc:	mov	sp, r3
0x8100:	sub	sl, sp, #0x1000
0x8104:	mov	r3, sl
0x8108:	mov	r1, #0xd7
0x810c:	msr	cpsr_c, r1
0x8110:	mov	sp, r3
0x8114:	sub	r3, r3, #0x1000
0x8118:	mov	r1, #0xdb
0x811c:	msr	cpsr_c, r1
0x8120:	mov	sp, r3
0x8124:	sub	r3, r3, #0x1000
0x8128:	mov	r1, #0xd2
0x812c:	msr	cpsr_c, r1
0x8130:	mov	sp, r3
0x8134:	sub	r3, r3, #0x2000
0x8138:	mov	r1, #0xd3
0x813c:	msr	cpsr_c, r1
0x8140:	mov	sp, r3
0x8144:	sub	r3, r3, #0x8000
0x8148:	bic	r3, r3, #0xff
0x814c:	bic	r3, r3, #0xff00
0x8150:	mov	r1, #0xdf
0x8154:	msr	cpsr_c, r1
0x8158:	mov	sp, r3
0x815c:	orr	r4, r4, #0xc0
0x8160:	msr	cpsr_c, r4
0x8164:	sub	sl, r3, #0x10000
0x8168:	bx	lr
0x816c:	ldr	r3, [pc, #0x94]
0x8170:	cmp	r3, #0
0x8174:	ldreq	r3, [pc, #0x80]
0x8178:	mov	sp, r3
0x817c:	bl	#0x80e4
0x8180:	movs	r1, #0
0x8184:	mov	fp, r1
0x8188:	mov	r7, r1
0x818c:	ldr	r0, [pc, #0x78]
0x8190:	ldr	r2, [pc, #0x78]
0x8194:	subs	r2, r2, r0
0x8198:	bl	#0xa6ac
0x819c:	ldr	r3, [pc, #0x5c]
0x81a0:	cmp	r3, #0
0x81a4:	beq	#0x81b0
0x81a8:	mov	lr, pc
0x81ac:	mov	pc, r3
0x81b0:	ldr	r3, [pc, #0x4c]
0x81b4:	cmp	r3, #0
0x81b8:	beq	#0x81c4
0x81bc:	mov	lr, pc
0x81c0:	mov	pc, r3
0x81c4:	movs	r0, #0
0x81c8:	movs	r1, #0
0x81cc:	movs	r4, r0
0x81d0:	movs	r5, r1
0x81d4:	ldr	r0, [pc, #0x38]
0x81d8:	cmp	r0, #0
0x81dc:	beq	#0x81e8
0x81e0:	ldr	r0, [pc, #0x30]
0x81e4:	bl	#0xda04
0x81e8:	bl	#0x9c80
0x81ec:	movs	r0, r4
0x81f0:	movs	r1, r5
0x81f4:	bl	#0x85a8
0x81f8:	bl	#0x8018
0x81fc:	andeq	r0, r8, r0
0x8200:	andeq	r0, r0, r0
0x8204:	andeq	r0, r0, r0
0x8208:	andeq	r0, r0, r0
0x820c:	andeq	r5, r2, r0, lsl r8
0x8210:	muleq	r2, r0, r8
0x8214:	andeq	sp, r0, r4, lsl #20
0x8218:	andeq	pc, r0, r0, ror #6
0x821c:	str	fp, [sp, #-4]!
0x8220:	add	fp, sp, #0
0x8224:	sub	sp, sp, #0xc
0x8228:	str	r0, [fp, #-8]
0x822c:	str	r1, [fp, #-0xc]
0x8230:	ldr	r3, [fp, #-0xc]
0x8234:	add	r3, r3, #4
0x8238:	ldr	r1, [r3]
0x823c:	ldr	r3, [fp, #-0xc]
0x8240:	add	r3, r3, #8
0x8244:	ldr	r2, [r3]
0x8248:	ldr	r3, [fp, #-8]
0x824c:	add	r3, r3, #4
0x8250:	add	r2, r1, r2
0x8254:	str	r2, [r3]
0x8258:	mov	r0, r0
0x825c:	add	sp, fp, #0
0x8260:	pop	{fp}
0x8264:	bx	lr
0x8268:	str	fp, [sp, #-4]!
0x826c:	add	fp, sp, #0
0x8270:	sub	sp, sp, #0xc
0x8274:	str	r0, [fp, #-8]
0x8278:	str	r1, [fp, #-0xc]
0x827c:	ldr	r3, [fp, #-0xc]
0x8280:	add	r3, r3, #4
0x8284:	ldr	r2, [r3]
0x8288:	ldr	r3, [fp, #-0xc]
0x828c:	add	r3, r3, #8
0x8290:	ldr	r1, [r3]
0x8294:	ldr	r3, [fp, #-8]
0x8298:	add	r3, r3, #4
0x829c:	mul	r2, r1, r2
0x82a0:	str	r2, [r3]
0x82a4:	mov	r0, r0
0x82a8:	add	sp, fp, #0
0x82ac:	pop	{fp}
0x82b0:	bx	lr
0x82b4:	str	fp, [sp, #-4]!
0x82b8:	add	fp, sp, #0
0x82bc:	sub	sp, sp, #0xc
0x82c0:	str	r0, [fp, #-8]
0x82c4:	str	r1, [fp, #-0xc]
0x82c8:	ldr	r3, [fp, #-0xc]
0x82cc:	add	r3, r3, #4
0x82d0:	ldr	r3, [r3]
0x82d4:	and	r3, r3, #0xff
0x82d8:	ldr	r2, [pc, #0x1c]
0x82dc:	ldrb	r2, [r2, r3]
0x82e0:	ldr	r3, [fp, #-8]
0x82e4:	add	r3, r3, #4
0x82e8:	str	r2, [r3]
0x82ec:	mov	r0, r0
0x82f0:	add	sp, fp, #0
0x82f4:	pop	{fp}
0x82f8:	bx	lr
0x82fc:	andeq	r4, r1, r8, asr r8
0x8300:	str	fp, [sp, #-4]!
0x8304:	add	fp, sp, #0
0x8308:	sub	sp, sp, #0x14
0x830c:	str	r0, [fp, #-0x10]
0x8310:	str	r1, [fp, #-0x14]
0x8314:	mov	r3, #0
0x8318:	str	r3, [fp, #-8]
0x831c:	b	#0x846c
0x8320:	ldr	r2, [fp, #-8]
0x8324:	mov	r3, r2
0x8328:	lsl	r3, r3, #1
0x832c:	add	r3, r3, r2
0x8330:	lsl	r3, r3, #2
0x8334:	add	r3, r3, #4
0x8338:	ldr	r2, [fp, #-0x14]
0x833c:	add	r3, r2, r3
0x8340:	ldr	r0, [r3]
0x8344:	ldr	r2, [fp, #-8]
0x8348:	mov	r3, r2
0x834c:	lsl	r3, r3, #1
0x8350:	add	r3, r3, r2
0x8354:	lsl	r3, r3, #2
0x8358:	add	r3, r3, #8
0x835c:	ldr	r2, [fp, #-0x14]
0x8360:	add	r3, r2, r3
0x8364:	ldr	r1, [r3]
0x8368:	ldr	r2, [fp, #-8]
0x836c:	mov	r3, r2
0x8370:	lsl	r3, r3, #1
0x8374:	add	r3, r3, r2
0x8378:	lsl	r3, r3, #2
0x837c:	add	r3, r3, #4
0x8380:	ldr	r2, [fp, #-0x10]
0x8384:	add	r3, r2, r3
0x8388:	add	r2, r0, r1
0x838c:	str	r2, [r3]
0x8390:	ldr	r2, [fp, #-8]
0x8394:	mov	r3, r2
0x8398:	lsl	r3, r3, #1
0x839c:	add	r3, r3, r2
0x83a0:	lsl	r3, r3, #2
0x83a4:	add	r3, r3, #4
0x83a8:	ldr	r2, [fp, #-0x14]
0x83ac:	add	r3, r2, r3
0x83b0:	ldr	r1, [r3]
0x83b4:	ldr	r2, [fp, #-8]
0x83b8:	mov	r3, r2
0x83bc:	lsl	r3, r3, #1
0x83c0:	add	r3, r3, r2
0x83c4:	lsl	r3, r3, #2
0x83c8:	add	r3, r3, #8
0x83cc:	ldr	r2, [fp, #-0x14]
0x83d0:	add	r3, r2, r3
0x83d4:	ldr	r0, [r3]
0x83d8:	ldr	r2, [fp, #-8]
0x83dc:	mov	r3, r2
0x83e0:	lsl	r3, r3, #1
0x83e4:	add	r3, r3, r2
0x83e8:	lsl	r3, r3, #2
0x83ec:	add	r3, r3, #8
0x83f0:	ldr	r2, [fp, #-0x10]
0x83f4:	add	r3, r2, r3
0x83f8:	mul	r2, r0, r1
0x83fc:	str	r2, [r3]
0x8400:	ldr	r3, [fp, #-8]
0x8404:	add	r2, r3, #1
0x8408:	mov	r3, r2
0x840c:	lsl	r3, r3, #1
0x8410:	add	r3, r3, r2
0x8414:	lsl	r3, r3, #2
0x8418:	mov	r2, r3
0x841c:	ldr	r3, [fp, #-0x14]
0x8420:	add	r3, r3, r2
0x8424:	ldr	r3, [r3]
0x8428:	and	r3, r3, #0xff
0x842c:	ldr	r2, [pc, #0x58]
0x8430:	ldrb	r1, [r2, r3]
0x8434:	ldr	r3, [fp, #-8]
0x8438:	add	r2, r3, #1
0x843c:	mov	r3, r2
0x8440:	lsl	r3, r3, #1
0x8444:	add	r3, r3, r2
0x8448:	lsl	r3, r3, #2
0x844c:	mov	r2, r3
0x8450:	ldr	r3, [fp, #-0x10]
0x8454:	add	r3, r3, r2
0x8458:	mov	r2, r1
0x845c:	str	r2, [r3]
0x8460:	ldr	r3, [fp, #-8]
0x8464:	add	r3, r3, #1
0x8468:	str	r3, [fp, #-8]
0x846c:	ldr	r3, [fp, #-8]
0x8470:	cmp	r3, #9
0x8474:	ble	#0x8320
0x8478:	mov	r0, r0
0x847c:	mov	r0, r0
0x8480:	add	sp, fp, #0
0x8484:	pop	{fp}
0x8488:	bx	lr
0x848c:	andeq	r4, r1, r8, asr r8
0x8490:	push	{fp, lr}
0x8494:	add	fp, sp, #4
0x8498:	sub	sp, sp, #8
0x849c:	str	r0, [fp, #-8]
0x84a0:	bl	#0xa860
0x84a4:	mov	r3, r0
0x84a8:	mov	r2, r3
0x84ac:	ldr	r3, [fp, #-8]
0x84b0:	str	r2, [r3]
0x84b4:	mov	r0, r0
0x84b8:	sub	sp, fp, #4
0x84bc:	pop	{fp, lr}
0x84c0:	bx	lr
0x84c4:	push	{fp, lr}
0x84c8:	add	fp, sp, #4
0x84cc:	sub	sp, sp, #0x10
0x84d0:	str	r0, [fp, #-0x10]
0x84d4:	str	r1, [fp, #-0x14]
0x84d8:	sub	r3, fp, #8
0x84dc:	mov	r0, r3
0x84e0:	bl	#0x8490
0x84e4:	ldr	r3, [fp, #-0x14]
0x84e8:	add	r3, r3, #4
0x84ec:	ldr	r1, [r3]
0x84f0:	ldr	r2, [fp, #-8]
0x84f4:	ldr	r3, [fp, #-0x10]
0x84f8:	add	r3, r3, #4
0x84fc:	eor	r2, r2, r1
0x8500:	str	r2, [r3]
0x8504:	mov	r0, r0
0x8508:	sub	sp, fp, #4
0x850c:	pop	{fp, lr}
0x8510:	bx	lr
0x8514:	push	{fp, lr}
0x8518:	add	fp, sp, #4
0x851c:	sub	sp, sp, #0x18
0x8520:	str	r0, [fp, #-0x18]
0x8524:	ldr	r1, [pc, #0x70]
0x8528:	ldr	r0, [pc, #0x70]
0x852c:	bl	#0x9050
0x8530:	str	r0, [fp, #-0xc]
0x8534:	mov	r3, #1
0x8538:	str	r3, [fp, #-0x10]
0x853c:	mov	r3, #0
0x8540:	str	r3, [fp, #-8]
0x8544:	b	#0x8574
0x8548:	ldr	r3, [fp, #-8]
0x854c:	lsl	r3, r3, #2
0x8550:	ldr	r2, [fp, #-0x18]
0x8554:	add	r3, r2, r3
0x8558:	ldr	r2, [fp, #-8]
0x855c:	ldr	r1, [pc, #0x40]
0x8560:	ldr	r0, [fp, #-0xc]
0x8564:	bl	#0x9094
0x8568:	ldr	r3, [fp, #-8]
0x856c:	add	r3, r3, #1
0x8570:	str	r3, [fp, #-8]
0x8574:	ldr	r2, [fp, #-8]
0x8578:	ldr	r3, [fp, #-0x10]
0x857c:	cmp	r2, r3
0x8580:	blt	#0x8548
0x8584:	ldr	r0, [fp, #-0xc]
0x8588:	bl	#0x87f0
0x858c:	mov	r0, r0
0x8590:	sub	sp, fp, #4
0x8594:	pop	{fp, lr}
0x8598:	bx	lr
0x859c:	andeq	r4, r1, r8, asr sb
0x85a0:	andeq	r4, r1, ip, asr sb
0x85a4:	andeq	r4, r1, r8, ror #18
0x85a8:	push	{fp, lr}
0x85ac:	add	fp, sp, #4
0x85b0:	sub	sp, sp, #8
0x85b4:	mov	r3, #1
0x85b8:	strb	r3, [fp, #-5]
0x85bc:	ldrb	r3, [fp, #-5]
0x85c0:	cmp	r3, #0
0x85c4:	beq	#0x865c
0x85c8:	ldr	r3, [pc, #0x9c]
0x85cc:	ldr	r3, [r3]
0x85d0:	cmp	r3, #1
0x85d4:	bne	#0x85e4
0x85d8:	ldr	r1, [pc, #0x90]
0x85dc:	ldr	r0, [fp, #-0xc]
0x85e0:	bl	#0x821c
0x85e4:	ldr	r3, [pc, #0x80]
0x85e8:	ldr	r3, [r3]
0x85ec:	cmp	r3, #2
0x85f0:	bne	#0x8600
0x85f4:	ldr	r1, [pc, #0x78]
0x85f8:	ldr	r0, [fp, #-0xc]
0x85fc:	bl	#0x8268
0x8600:	ldr	r3, [pc, #0x64]
0x8604:	ldr	r3, [r3]
0x8608:	cmp	r3, #3
0x860c:	bne	#0x861c
0x8610:	ldr	r1, [pc, #0x60]
0x8614:	ldr	r0, [fp, #-0xc]
0x8618:	bl	#0x82b4
0x861c:	ldr	r3, [pc, #0x48]
0x8620:	ldr	r3, [r3]
0x8624:	cmp	r3, #4
0x8628:	bne	#0x8638
0x862c:	ldr	r1, [pc, #0x48]
0x8630:	ldr	r0, [fp, #-0xc]
0x8634:	bl	#0x8300
0x8638:	ldr	r3, [pc, #0x2c]
0x863c:	ldr	r3, [r3]
0x8640:	cmp	r3, #5
0x8644:	bne	#0x8654
0x8648:	ldr	r1, [pc, #0x30]
0x864c:	ldr	r0, [fp, #-0xc]
0x8650:	bl	#0x84c4
0x8654:	ldr	r0, [fp, #-0xc]
0x8658:	bl	#0x8514
0x865c:	mov	r0, r0
0x8660:	sub	sp, fp, #4
0x8664:	pop	{fp, lr}
0x8668:	bx	lr
0x866c:	strheq	r4, [r2], -ip
0x8670:	andeq	r4, r2, r0, asr #27
0x8674:	andeq	r4, r2, ip, asr #27
0x8678:	ldrdeq	r4, r5, [r2], -r8
0x867c:	andeq	r4, r2, r0, ror #27
0x8680:	andeq	r4, r2, ip, asr lr
0x8684:	push	{r4, r5, r6, lr}
0x8688:	subs	r4, r1, #0
0x868c:	beq	#0x879c
0x8690:	cmp	r0, #0
0x8694:	mov	r5, r0
0x8698:	beq	#0x86a8
0x869c:	ldr	r3, [r0, #0x38]
0x86a0:	cmp	r3, #0
0x86a4:	beq	#0x87ac
0x86a8:	ldr	r3, [r4, #0x64]
0x86ac:	tst	r3, #1
0x86b0:	beq	#0x8770
0x86b4:	ldrsh	r3, [r4, #0xc]
0x86b8:	cmp	r3, #0
0x86bc:	beq	#0x879c
0x86c0:	mov	r1, r4
0x86c4:	mov	r0, r5
0x86c8:	bl	#0x8804
0x86cc:	ldr	r3, [r4, #0x2c]
0x86d0:	cmp	r3, #0
0x86d4:	mov	r6, r0
0x86d8:	beq	#0x86f4
0x86dc:	mov	r0, r5
0x86e0:	ldr	r1, [r4, #0x1c]
0x86e4:	mov	lr, pc
0x86e8:	bx	r3
0x86ec:	cmp	r0, #0
0x86f0:	mvnlt	r6, #0
0x86f4:	ldrh	r3, [r4, #0xc]
0x86f8:	tst	r3, #0x80
0x86fc:	bne	#0x87d4
0x8700:	ldr	r1, [r4, #0x30]
0x8704:	cmp	r1, #0
0x8708:	beq	#0x8724
0x870c:	add	r3, r4, #0x40
0x8710:	cmp	r1, r3
0x8714:	movne	r0, r5
0x8718:	blne	#0x91d0
0x871c:	mov	r3, #0
0x8720:	str	r3, [r4, #0x30]
0x8724:	ldr	r1, [r4, #0x44]
0x8728:	cmp	r1, #0
0x872c:	beq	#0x8740
0x8730:	mov	r0, r5
0x8734:	bl	#0x91d0
0x8738:	mov	r3, #0
0x873c:	str	r3, [r4, #0x44]
0x8740:	bl	#0x8e48
0x8744:	mov	r3, #0
0x8748:	ldr	r2, [r4, #0x64]
0x874c:	tst	r2, #1
0x8750:	strh	r3, [r4, #0xc]
0x8754:	beq	#0x87e4
0x8758:	ldr	r0, [r4, #0x58]
0x875c:	bl	#0x9d14
0x8760:	bl	#0x8e60
0x8764:	mov	r0, r6
0x8768:	pop	{r4, r5, r6, lr}
0x876c:	bx	lr
0x8770:	ldrh	r3, [r4, #0xc]
0x8774:	tst	r3, #0x200
0x8778:	bne	#0x86c0
0x877c:	ldr	r0, [r4, #0x58]
0x8780:	bl	#0x9d1c
0x8784:	ldrsh	r3, [r4, #0xc]
0x8788:	cmp	r3, #0
0x878c:	bne	#0x86c0
0x8790:	ldr	r6, [r4, #0x64]
0x8794:	ands	r6, r6, #1
0x8798:	beq	#0x87c0
0x879c:	mov	r6, #0
0x87a0:	mov	r0, r6
0x87a4:	pop	{r4, r5, r6, lr}
0x87a8:	bx	lr
0x87ac:	bl	#0x8ca0
0x87b0:	ldr	r3, [r4, #0x64]
0x87b4:	tst	r3, #1
0x87b8:	bne	#0x86b4
0x87bc:	b	#0x8770
0x87c0:	ldr	r0, [r4, #0x58]
0x87c4:	bl	#0x9d34
0x87c8:	mov	r0, r6
0x87cc:	pop	{r4, r5, r6, lr}
0x87d0:	bx	lr
0x87d4:	mov	r0, r5
0x87d8:	ldr	r1, [r4, #0x10]
0x87dc:	bl	#0x91d0
0x87e0:	b	#0x8700
0x87e4:	ldr	r0, [r4, #0x58]
0x87e8:	bl	#0x9d34
0x87ec:	b	#0x8758
0x87f0:	ldr	r3, [pc, #8]
0x87f4:	mov	r1, r0
0x87f8:	ldr	r0, [r3]
0x87fc:	b	#0x8684
0x8800:	andeq	r4, r2, r4, ror #28
0x8804:	ldrsh	r2, [r1, #0xc]
0x8808:	tst	r2, #8
0x880c:	push	{r4, r5, r6, r7, r8, lr}
0x8810:	mov	r4, r1
0x8814:	mov	r7, r0
0x8818:	bne	#0x893c
0x881c:	ldr	r3, [r1, #4]
0x8820:	orr	r2, r2, #0x800
0x8824:	cmp	r3, #0
0x8828:	strh	r2, [r1, #0xc]
0x882c:	ble	#0x89c4
0x8830:	ldr	r6, [r4, #0x28]
0x8834:	cmp	r6, #0
0x8838:	beq	#0x89d0
0x883c:	mov	r1, #0
0x8840:	lsl	r3, r2, #0x10
0x8844:	ands	r5, r2, #0x1000
0x8848:	ldr	r8, [r7]
0x884c:	lsr	r3, r3, #0x10
0x8850:	str	r1, [r7]
0x8854:	bne	#0x89dc
0x8858:	mov	r3, #1
0x885c:	mov	r2, r5
0x8860:	mov	r0, r7
0x8864:	ldr	r1, [r4, #0x1c]
0x8868:	mov	lr, pc
0x886c:	bx	r6
0x8870:	cmn	r0, #1
0x8874:	beq	#0x8a10
0x8878:	ldrh	r3, [r4, #0xc]
0x887c:	ldr	r6, [r4, #0x28]
0x8880:	tst	r3, #4
0x8884:	beq	#0x88a0
0x8888:	ldr	r2, [r4, #0x30]
0x888c:	ldr	r3, [r4, #4]
0x8890:	cmp	r2, #0
0x8894:	sub	r0, r0, r3
0x8898:	ldrne	r3, [r4, #0x3c]
0x889c:	subne	r0, r0, r3
0x88a0:	mov	r2, r0
0x88a4:	mov	r3, #0
0x88a8:	mov	r0, r7
0x88ac:	ldr	r1, [r4, #0x1c]
0x88b0:	mov	lr, pc
0x88b4:	bx	r6
0x88b8:	cmn	r0, #1
0x88bc:	bne	#0x89e4
0x88c0:	ldr	r2, [r7]
0x88c4:	sub	r1, r2, #0x1d
0x88c8:	rsbs	r3, r1, #0
0x88cc:	adc	r3, r3, r1
0x88d0:	cmp	r2, #0
0x88d4:	moveq	r3, #1
0x88d8:	cmp	r2, #0x16
0x88dc:	orreq	r3, r3, #1
0x88e0:	cmp	r3, #0
0x88e4:	beq	#0x8a30
0x88e8:	mov	r1, #0
0x88ec:	ldrsh	r3, [r4, #0xc]
0x88f0:	bic	r3, r3, #0x800
0x88f4:	strh	r3, [r4, #0xc]
0x88f8:	tst	r3, #0x1000
0x88fc:	ldr	r3, [r4, #0x10]
0x8900:	str	r1, [r4, #4]
0x8904:	str	r3, [r4]
0x8908:	bne	#0x8a40
0x890c:	ldr	r1, [r4, #0x30]
0x8910:	cmp	r1, #0
0x8914:	str	r8, [r7]
0x8918:	beq	#0x89d0
0x891c:	add	r3, r4, #0x40
0x8920:	cmp	r1, r3
0x8924:	movne	r0, r7
0x8928:	blne	#0x91d0
0x892c:	mov	r0, #0
0x8930:	str	r0, [r4, #0x30]
0x8934:	pop	{r4, r5, r6, r7, r8, lr}
0x8938:	bx	lr
0x893c:	ldr	r6, [r1, #0x10]
0x8940:	cmp	r6, #0
0x8944:	beq	#0x89d0
0x8948:	lsl	r3, r2, #0x10
0x894c:	lsr	r3, r3, #0x10
0x8950:	tst	r3, #3
0x8954:	movne	r3, #0
0x8958:	ldr	r5, [r1]
0x895c:	ldreq	r3, [r1, #0x14]
0x8960:	sub	r5, r5, r6
0x8964:	cmp	r5, #0
0x8968:	str	r6, [r1]
0x896c:	str	r3, [r1, #8]
0x8970:	bgt	#0x8984
0x8974:	b	#0x89d0
0x8978:	cmp	r5, #0
0x897c:	add	r6, r6, r0
0x8980:	ble	#0x89d0
0x8984:	mov	r3, r5
0x8988:	mov	r2, r6
0x898c:	mov	r0, r7
0x8990:	ldr	r8, [r4, #0x24]
0x8994:	ldr	r1, [r4, #0x1c]
0x8998:	mov	lr, pc
0x899c:	bx	r8
0x89a0:	cmp	r0, #0
0x89a4:	sub	r5, r5, r0
0x89a8:	bgt	#0x8978
0x89ac:	ldrh	r3, [r4, #0xc]
0x89b0:	orr	r3, r3, #0x40
0x89b4:	mvn	r0, #0
0x89b8:	strh	r3, [r4, #0xc]
0x89bc:	pop	{r4, r5, r6, r7, r8, lr}
0x89c0:	bx	lr
0x89c4:	ldr	r3, [r1, #0x3c]
0x89c8:	cmp	r3, #0
0x89cc:	bgt	#0x8830
0x89d0:	mov	r0, #0
0x89d4:	pop	{r4, r5, r6, r7, r8, lr}
0x89d8:	bx	lr
0x89dc:	ldr	r0, [r4, #0x50]
0x89e0:	b	#0x8880
0x89e4:	mov	r2, #0
0x89e8:	ldrsh	r3, [r4, #0xc]
0x89ec:	bic	r3, r3, #0x800
0x89f0:	strh	r3, [r4, #0xc]
0x89f4:	tst	r3, #0x1000
0x89f8:	ldr	r3, [r4, #0x10]
0x89fc:	str	r2, [r4, #4]
0x8a00:	str	r3, [r4]
0x8a04:	beq	#0x890c
0x8a08:	str	r0, [r4, #0x50]
0x8a0c:	b	#0x890c
0x8a10:	ldr	r3, [r7]
0x8a14:	cmp	r3, #0
0x8a18:	beq	#0x8878
0x8a1c:	cmp	r3, #0x16
0x8a20:	cmpne	r3, #0x1d
0x8a24:	moveq	r0, r5
0x8a28:	streq	r8, [r7]
0x8a2c:	beq	#0x89d4
0x8a30:	ldrh	r3, [r4, #0xc]
0x8a34:	orr	r3, r3, #0x40
0x8a38:	strh	r3, [r4, #0xc]
0x8a3c:	b	#0x89d4
0x8a40:	cmp	r2, #0
0x8a44:	bne	#0x890c
0x8a48:	b	#0x8a08
0x8a4c:	push	{r4, r5, r6, lr}
0x8a50:	subs	r5, r0, #0
0x8a54:	mov	r4, r1
0x8a58:	beq	#0x8a68
0x8a5c:	ldr	r3, [r5, #0x38]
0x8a60:	cmp	r3, #0
0x8a64:	beq	#0x8ac0
0x8a68:	ldrsh	r0, [r4, #0xc]
0x8a6c:	cmp	r0, #0
0x8a70:	moveq	r5, r0
0x8a74:	beq	#0x8ab4
0x8a78:	ldr	r3, [r4, #0x64]
0x8a7c:	tst	r3, #1
0x8a80:	bne	#0x8a8c
0x8a84:	tst	r0, #0x200
0x8a88:	beq	#0x8ac8
0x8a8c:	mov	r0, r5
0x8a90:	mov	r1, r4
0x8a94:	bl	#0x8804
0x8a98:	ldr	r3, [r4, #0x64]
0x8a9c:	tst	r3, #1
0x8aa0:	mov	r5, r0
0x8aa4:	bne	#0x8ab4
0x8aa8:	ldrh	r3, [r4, #0xc]
0x8aac:	tst	r3, #0x200
0x8ab0:	beq	#0x8ad4
0x8ab4:	mov	r0, r5
0x8ab8:	pop	{r4, r5, r6, lr}
0x8abc:	bx	lr
0x8ac0:	bl	#0x8ca0
0x8ac4:	b	#0x8a68
0x8ac8:	ldr	r0, [r4, #0x58]
0x8acc:	bl	#0x9d1c
0x8ad0:	b	#0x8a8c
0x8ad4:	ldr	r0, [r4, #0x58]
0x8ad8:	bl	#0x9d34
0x8adc:	mov	r0, r5
0x8ae0:	pop	{r4, r5, r6, lr}
0x8ae4:	bx	lr
0x8ae8:	subs	r1, r0, #0
0x8aec:	ldrne	r3, [pc, #0x20]
0x8af0:	ldrne	r0, [r3]
0x8af4:	bne	#0x8a4c
0x8af8:	push	{r4, lr}
0x8afc:	ldr	r3, [pc, #0x14]
0x8b00:	ldr	r1, [pc, #0x14]
0x8b04:	ldr	r0, [r3]
0x8b08:	bl	#0x9c08
0x8b0c:	pop	{r4, lr}
0x8b10:	bx	lr
0x8b14:	andeq	r4, r2, r4, ror #28
0x8b18:	andeq	r4, r1, ip, ror sb
0x8b1c:	andeq	r8, r0, ip, asr #20
0x8b20:	mov	r3, #0
0x8b24:	push	{r4, lr}
0x8b28:	mov	r4, r0
0x8b2c:	strh	r1, [r0, #0xc]
0x8b30:	strh	r2, [r0, #0xe]
0x8b34:	mov	r1, r3
0x8b38:	str	r3, [r0]
0x8b3c:	str	r3, [r0, #4]
0x8b40:	str	r3, [r0, #8]
0x8b44:	str	r3, [r0, #0x64]
0x8b48:	str	r3, [r0, #0x10]
0x8b4c:	str	r3, [r0, #0x14]
0x8b50:	str	r3, [r0, #0x18]
0x8b54:	mov	r2, #8
0x8b58:	add	r0, r0, #0x5c
0x8b5c:	bl	#0xa6ac
0x8b60:	ldr	r0, [pc, #0x2c]
0x8b64:	ldr	r1, [pc, #0x2c]
0x8b68:	ldr	r2, [pc, #0x2c]
0x8b6c:	ldr	r3, [pc, #0x2c]
0x8b70:	str	r0, [r4, #0x20]
0x8b74:	str	r4, [r4, #0x1c]
0x8b78:	str	r1, [r4, #0x24]
0x8b7c:	str	r2, [r4, #0x28]
0x8b80:	str	r3, [r4, #0x2c]
0x8b84:	add	r0, r4, #0x58
0x8b88:	bl	#0x9d0c
0x8b8c:	pop	{r4, lr}
0x8b90:	bx	lr
0x8b94:	andeq	sl, r0, r0, lsr #24
0x8b98:	andeq	sl, r0, ip, asr ip
0x8b9c:	strheq	sl, [r0], -r8
0x8ba0:	andeq	sl, r0, r8, ror #25
0x8ba4:	push	{r4, lr}
0x8ba8:	ldr	r1, [pc, #8]
0x8bac:	bl	#0x9c08
0x8bb0:	pop	{r4, lr}
0x8bb4:	bx	lr
0x8bb8:	andeq	r8, r0, r4, lsl #13
0x8bbc:	ldr	r3, [r0, #0x64]
0x8bc0:	tst	r3, #1
0x8bc4:	bne	#0x8bd4
0x8bc8:	ldrh	r3, [r0, #0xc]
0x8bcc:	tst	r3, #0x200
0x8bd0:	beq	#0x8bdc
0x8bd4:	mov	r0, #0
0x8bd8:	bx	lr
0x8bdc:	push	{r4, lr}
0x8be0:	ldr	r0, [r0, #0x58]
0x8be4:	bl	#0x9d1c
0x8be8:	mov	r0, #0
0x8bec:	pop	{r4, lr}
0x8bf0:	bx	lr
0x8bf4:	ldr	r3, [r0, #0x64]
0x8bf8:	tst	r3, #1
0x8bfc:	bne	#0x8c0c
0x8c00:	ldrh	r3, [r0, #0xc]
0x8c04:	tst	r3, #0x200
0x8c08:	beq	#0x8c14
0x8c0c:	mov	r0, #0
0x8c10:	bx	lr
0x8c14:	push	{r4, lr}
0x8c18:	ldr	r0, [r0, #0x58]
0x8c1c:	bl	#0x9d34
0x8c20:	mov	r0, #0
0x8c24:	pop	{r4, lr}
0x8c28:	bx	lr
0x8c2c:	sub	r2, r1, #1
0x8c30:	push	{r4, r5, r6, lr}
0x8c34:	add	r4, r2, r2, lsl #1
0x8c38:	add	r2, r2, r4, lsl #2
0x8c3c:	lsl	r4, r2, #3
0x8c40:	mov	r6, r1
0x8c44:	add	r1, r4, #0x74
0x8c48:	bl	#0x9ed8
0x8c4c:	subs	r5, r0, #0
0x8c50:	beq	#0x8c70
0x8c54:	mov	r1, #0
0x8c58:	add	r0, r5, #0xc
0x8c5c:	str	r6, [r5, #4]
0x8c60:	str	r1, [r5]
0x8c64:	str	r0, [r5, #8]
0x8c68:	add	r2, r4, #0x68
0x8c6c:	bl	#0xa6ac
0x8c70:	mov	r0, r5
0x8c74:	pop	{r4, r5, r6, lr}
0x8c78:	bx	lr
0x8c7c:	push	{r4, lr}
0x8c80:	ldr	r3, [pc, #0x10]
0x8c84:	ldr	r1, [pc, #0x10]
0x8c88:	ldr	r0, [r3]
0x8c8c:	bl	#0x9c08
0x8c90:	pop	{r4, lr}
0x8c94:	bx	lr
0x8c98:	andeq	r4, r1, ip, ror sb
0x8c9c:	andeq	r8, r0, r4, lsl #13
0x8ca0:	push	{r4, lr}
0x8ca4:	mov	r4, r0
0x8ca8:	ldr	r0, [pc, #0x7c]
0x8cac:	bl	#0x9d1c
0x8cb0:	ldr	r2, [r4, #0x38]
0x8cb4:	cmp	r2, #0
0x8cb8:	bne	#0x8d1c
0x8cbc:	mov	r0, #3
0x8cc0:	ldr	r1, [pc, #0x68]
0x8cc4:	add	r3, r4, #0x2ec
0x8cc8:	str	r3, [r4, #0x2e8]
0x8ccc:	str	r2, [r4, #0x2e0]
0x8cd0:	str	r0, [r4, #0x2e4]
0x8cd4:	str	r1, [r4, #0x3c]
0x8cd8:	ldr	r0, [r4, #4]
0x8cdc:	mov	r1, #4
0x8ce0:	bl	#0x8b20
0x8ce4:	ldr	r0, [r4, #8]
0x8ce8:	mov	r2, #1
0x8cec:	mov	r1, #9
0x8cf0:	bl	#0x8b20
0x8cf4:	ldr	r0, [r4, #0xc]
0x8cf8:	mov	r2, #2
0x8cfc:	mov	r1, #0x12
0x8d00:	bl	#0x8b20
0x8d04:	mov	r3, #1
0x8d08:	ldr	r0, [pc, #0x1c]
0x8d0c:	str	r3, [r4, #0x38]
0x8d10:	bl	#0x9d34
0x8d14:	pop	{r4, lr}
0x8d18:	bx	lr
0x8d1c:	ldr	r0, [pc, #8]
0x8d20:	bl	#0x9d34
0x8d24:	pop	{r4, lr}
0x8d28:	bx	lr
0x8d2c:	andeq	r5, r2, r4, ror r8
0x8d30:	andeq	r8, r0, r4, lsr #23
0x8d34:	push	{r4, r5, r6, r7, r8, lr}
0x8d38:	mov	r7, r0
0x8d3c:	ldr	r0, [pc, #0xf8]
0x8d40:	bl	#0x9d1c
0x8d44:	ldr	r3, [pc, #0xf4]
0x8d48:	ldr	r6, [r3]
0x8d4c:	ldr	r3, [r6, #0x38]
0x8d50:	cmp	r3, #0
0x8d54:	beq	#0x8e00
0x8d58:	add	r6, r6, #0x2e0
0x8d5c:	ldr	r3, [r6, #4]
0x8d60:	subs	r3, r3, #1
0x8d64:	ldr	r4, [r6, #8]
0x8d68:	bpl	#0x8d7c
0x8d6c:	b	#0x8dec
0x8d70:	cmn	r3, #1
0x8d74:	add	r4, r4, #0x68
0x8d78:	beq	#0x8dec
0x8d7c:	ldrsh	r5, [r4, #0xc]
0x8d80:	cmp	r5, #0
0x8d84:	sub	r3, r3, #1
0x8d88:	bne	#0x8d70
0x8d8c:	ldr	r3, [pc, #0xb0]
0x8d90:	add	r0, r4, #0x58
0x8d94:	str	r3, [r4, #0xc]
0x8d98:	str	r5, [r4, #0x64]
0x8d9c:	bl	#0x9d0c
0x8da0:	ldr	r0, [pc, #0x94]
0x8da4:	bl	#0x9d34
0x8da8:	mov	r2, #8
0x8dac:	mov	r1, r5
0x8db0:	str	r5, [r4]
0x8db4:	str	r5, [r4, #8]
0x8db8:	str	r5, [r4, #4]
0x8dbc:	str	r5, [r4, #0x10]
0x8dc0:	str	r5, [r4, #0x14]
0x8dc4:	str	r5, [r4, #0x18]
0x8dc8:	add	r0, r4, #0x5c
0x8dcc:	bl	#0xa6ac
0x8dd0:	str	r5, [r4, #0x30]
0x8dd4:	str	r5, [r4, #0x34]
0x8dd8:	str	r5, [r4, #0x44]
0x8ddc:	str	r5, [r4, #0x48]
0x8de0:	mov	r0, r4
0x8de4:	pop	{r4, r5, r6, r7, r8, lr}
0x8de8:	bx	lr
0x8dec:	ldr	r4, [r6]
0x8df0:	cmp	r4, #0
0x8df4:	beq	#0x8e0c
0x8df8:	mov	r6, r4
0x8dfc:	b	#0x8d5c
0x8e00:	mov	r0, r6
0x8e04:	bl	#0x8ca0
0x8e08:	b	#0x8d58
0x8e0c:	mov	r1, #4
0x8e10:	mov	r0, r7
0x8e14:	bl	#0x8c2c
0x8e18:	cmp	r0, #0
0x8e1c:	mov	r4, r0
0x8e20:	str	r0, [r6]
0x8e24:	bne	#0x8df8
0x8e28:	ldr	r0, [pc, #0xc]
0x8e2c:	bl	#0x9d34
0x8e30:	mov	r3, #0xc
0x8e34:	str	r3, [r7]
0x8e38:	b	#0x8de0
0x8e3c:	andeq	r5, r2, r8, lsl #17
0x8e40:	andeq	r4, r1, ip, ror sb
913 / 20279
instruction : push / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x0, IP = 0x0, SP = 0x80000000, LR = 0x0, PC = 0x85a8, CPSR = 0x400001d3 / modified register : ['sp'] / memory data : \x0\x48\x2d\xe9
instruction : add / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x0, IP = 0x0, SP = 0x7ffffff8, LR = 0x0, PC = 0x85ac, CPSR = 0x400001d3 / modified register : ['fp'] / memory data : \x4\xb0\x8d\xe2
instruction : sub / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff8, LR = 0x0, PC = 0x85b0, CPSR = 0x400001d3 / modified register : ['sp'] / memory data : \x8\xd0\x4d\xe2
instruction : mov / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85b4, CPSR = 0x400001d3 / modified register : ['r3'] / memory data : \x1\x30\xa0\xe3
instruction : strb / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x1, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85b8, CPSR = 0x400001d3 / modified register : [] / memory data : \x5\x30\x4b\xe5
instruction : ldrb / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x1, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85bc, CPSR = 0x400001d3 / modified register : ['r3'] / memory data : \x5\x30\x5b\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x1, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85c0, CPSR = 0x400001d3 / modified register : ['cpsr'] / memory data : \x0\x0\x53\xe3
instruction : beq / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x1, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85c4, CPSR = 0x200001d3 / modified register : ['pc'] / memory data : \x24\x0\x0\xa
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x1, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85c8, CPSR = 0x200001d3 / modified register : ['r3'] / memory data : \x9c\x30\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x24dbc, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85cc, CPSR = 0x200001d3 / modified register : ['r3'] / memory data : \x0\x30\x93\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85d0, CPSR = 0x200001d3 / modified register : ['cpsr'] / memory data : \x1\x0\x53\xe3
instruction : bne / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85d4, CPSR = 0x800001d3 / modified register : ['pc'] / memory data : \x2\x0\x0\x1a
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85e4, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x80\x30\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x24dbc, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85e8, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x0\x30\x93\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85ec, CPSR = 0x800001d3 / modified register : ['cpsr'] / memory data : \x2\x0\x53\xe3
instruction : bne / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x85f0, CPSR = 0x800001d3 / modified register : ['pc'] / memory data : \x2\x0\x0\x1a
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8600, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x64\x30\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x24dbc, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8604, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x0\x30\x93\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8608, CPSR = 0x800001d3 / modified register : ['cpsr'] / memory data : \x3\x0\x53\xe3
instruction : bne / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x860c, CPSR = 0x800001d3 / modified register : ['pc'] / memory data : \x2\x0\x0\x1a
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x861c, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x48\x30\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x24dbc, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8620, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x0\x30\x93\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8624, CPSR = 0x800001d3 / modified register : ['cpsr'] / memory data : \x4\x0\x53\xe3
instruction : bne / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8628, CPSR = 0x800001d3 / modified register : ['pc'] / memory data : \x2\x0\x0\x1a
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8638, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x2c\x30\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x24dbc, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x863c, CPSR = 0x800001d3 / modified register : ['r3'] / memory data : \x0\x30\x93\xe5
instruction : cmp / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8640, CPSR = 0x800001d3 / modified register : ['cpsr'] / memory data : \x5\x0\x53\xe3
instruction : bne / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8644, CPSR = 0x800001d3 / modified register : ['pc'] / memory data : \x2\x0\x0\x1a
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8654, CPSR = 0x800001d3 / modified register : ['r0'] / memory data : \xc\x0\x1b\xe5
instruction : bl / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x0, PC = 0x8658, CPSR = 0x800001d3 / modified register : ['lr', 'pc'] / memory data : \xad\xff\xff\xeb
instruction : push / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7ffffff0, LR = 0x865c, PC = 0x8514, CPSR = 0x800001d3 / modified register : ['sp'] / memory data : \x0\x48\x2d\xe9
instruction : add / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7ffffffc, IP = 0x0, SP = 0x7fffffe8, LR = 0x865c, PC = 0x8518, CPSR = 0x800001d3 / modified register : ['fp'] / memory data : \x4\xb0\x8d\xe2
instruction : sub / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7fffffec, IP = 0x0, SP = 0x7fffffe8, LR = 0x865c, PC = 0x851c, CPSR = 0x800001d3 / modified register : ['sp'] / memory data : \x18\xd0\x4d\xe2
instruction : str / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7fffffec, IP = 0x0, SP = 0x7fffffd0, LR = 0x865c, PC = 0x8520, CPSR = 0x800001d3 / modified register : [] / memory data : \x18\x0\xb\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x0, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7fffffec, IP = 0x0, SP = 0x7fffffd0, LR = 0x865c, PC = 0x8524, CPSR = 0x800001d3 / modified register : ['r1'] / memory data : \x70\x10\x9f\xe5
instruction : ldr / register data :R0 = 0x0, R1 = 0x14958, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7fffffec, IP = 0x0, SP = 0x7fffffd0, LR = 0x865c, PC = 0x8528, CPSR = 0x800001d3 / modified register : ['r0'] / memory data : \x70\x0\x9f\xe5
instruction : bl / register data :R0 = 0x1495c, R1 = 0x14958, R2 = 0x0, R3 = 0x0, R4 = 0x0, R5 = 0x0, R6 = 0x0, R7 = 0x0, R8 = 0x0, R9 = 0x0, R10 = 0x0, FP = 0x7fffffec, IP = 0x0, SP = 0x7fffffd0, LR = 0x865c, PC = 0x852c, CPSR = 0x800001d3 / modified register : ['lr', 'pc']